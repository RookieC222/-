#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <string.h>

	//int arr[10] = {1,2,3,4,5};//剩下默认0
	//创建一个数组-存放整形-10个
	//char arr2[5];
	//return 0;
	////sizeof计算变量所占空间大小-单位是字节-库函数-使用得引用头文件
	//7个元素-char 7*1=7
	//strlen求字符串长度（求的是\0之前的个数）只能针对字符串
	/*char arr[] = "abcdef";
	int i = 0;
	for (i = 0; i < strlen(arr); i++)
	{
		printf("%c\n",arr[i]);
	}*/




	/*int arr[] = { 1,2,3,4,5,6,7,8,9,10 };
	int sz = sizeof(arr) / sizeof(arr[0]);
	int i = 0;
	for (i = 0; i < sz; i++)
	{
		printf(" & arr[%d] = %p\n",i,&arr[i]);
	}
	return 0;*///计算指针位置（查地址）
	//数组在内存中连续存放
	/*int arr[][4] = {{1,2,3,4},{5,5,2,3}};
	printf("%d", arr);//二维数组初始化*/




	//数组乱序排序（冒泡排序）
//void bubble_sort(int arr[],int sz)
//	{
//		//确定冒泡排序的趟数
//		int i = 0;
//		//int sz = sizeof(arr) / sizeof(arr[0]);
//		//       此处相当于指针4   此处相当于一个字符占空间4   求出来sz=1
//	for (i = 0; i < sz - 1; i++)
//		{
//			//每一趟冒泡排序的
//			int j = 0;
//			for (j = 0; j <sz-1-i ; j++)
//			{
//				if (arr[j] > arr[j + 1])
//				{
//					int tmp = arr[j];
//					arr[j] = arr[j + 1];
//					arr[j + 1] = tmp;
//				}
//			}
//		}
//	}
//int main()
//{
//	int arr[] = { 0,8,9,7,6,4,5,3,2,1};
//	int i = 0;
//	int sz = sizeof(arr) / sizeof(arr[0]);
//	//数组arr传参时，传递过去的是一倍传过去（浪费空间）
//	//因此arr传过去arr【】是首元素地址&arr[0]因此需要在传参之前计算
//	bubble_sort(arr,sz);//冒泡排序
//	for (i = 0; i < sz; i++)
//	{
//		printf("%d ", arr[i]);
//	}
int main()
{




	//int arr[] = { 1,2,3,4,5,6,7 };
	//printf("%p\n", arr);
	//printf("%p\n", &arr);
	//printf("%d ", *arr);//数组名就是首元素地址（例外：sizeof（数组名）此时表示整个数组的大小，单位是字节）
	//&数组名，数组名代表整个数组，此时去除掉是整个数组的地址
	//printf("%p\n", arr);//此时表示第一个元素的地址
	//printf("%p\n", &arr）//此时表示整个数组的第一个地址，注意两者区分


	return 0;
